{"version":3,"sources":["api/api.js","api/posts.js","components/Loader/Loader.jsx","components/PostsList/PostsList.jsx","components/NewCommentForm/NewCommentForm.jsx","components/NewCommentForm/NewCommentFormPropTypes.jsx","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["BASE_URL","getUserPosts","userId","url","fetch","then","user","json","data","Loader","className","PostsList","changeUser","choosenUser","filterListByUser","useState","posts","setPosts","openOrClosePost","setOpenOrClosePost","useEffect","post","length","map","key","id","body","onClick","type","NewCommentForm","PropTypes","number","isRequired","func","selectedPostId","setDeleteOrAddWait","setWaitForComments","name","setName","email","setEmail","comment","setComment","value","onChange","target","placeholder","event","preventDefault","prev","method","headers","JSON","stringify","postId","PostDetails","deleteOrAddWait","waitForComments","waitForPost","setWaitForPost","comments","setComments","showComments","setShowComments","filter","x","App","setSelectedPostId","setChoosenUser","list","Number","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dc67f83f.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate-api.herokuapp.com';\n","import { BASE_URL } from './api';\n\nexport const getUserPosts = (userId = '', url) => (\n  fetch(`${BASE_URL}${url}${userId}`)\n    .then(user => user.json()).then(user => user.data));\n\nexport const removeComments = id => (\n  fetch(`${BASE_URL}/comments/${id}`, {\n    method: 'DELETE',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n  }));\n\nexport const addComments = (id, data) => (\n  fetch(`${BASE_URL}/comments/`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(\n      {\n        ...data,\n        postId: id,\n      },\n    ),\n  })\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './PostsList.scss';\nimport { getUserPosts } from '../../api/posts';\nimport { Loader } from '../Loader/Loader';\n\nexport const PostsList = ({ changeUser, choosenUser, filterListByUser }) => {\n  const [posts, setPosts] = useState([]);\n  const [openOrClosePost, setOpenOrClosePost] = useState(false);\n\n  useEffect(() => {\n    getUserPosts('', '/posts/').then(post => setPosts([...post]));\n  }, []);\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n      <ul className=\"PostsList__list\">\n        {posts.length ? (\n          filterListByUser(choosenUser, posts).map(user => (\n            <li\n              key={user.id}\n              className=\"PostsList__item\"\n            >\n              <div>\n                <b>\n                  [User #\n                  {user.userId}\n                  ]:&nbsp;\n                </b>\n                {user.body}\n              </div>\n              <button\n                onClick={() => {\n                  if (openOrClosePost === user.id) {\n                    changeUser(0);\n\n                    return setOpenOrClosePost(0);\n                  }\n\n                  changeUser(user.id);\n\n                  return setOpenOrClosePost(user.id);\n                }}\n                type=\"button\"\n                className=\"PostsList__button button\"\n              >\n                {user.id === openOrClosePost ? 'Clear' : 'Open'}\n              </button>\n            </li>\n          ))\n        ) : (<Loader />)}\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  changeUser: PropTypes.func.isRequired,\n  choosenUser: PropTypes.string.isRequired,\n  filterListByUser: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport { NewCommentFormPropTypes } from './NewCommentFormPropTypes';\nimport './NewCommentForm.scss';\nimport { addComments } from '../../api/posts';\n\nexport const NewCommentForm = (\n  { selectedPostId, setDeleteOrAddWait, setWaitForComments },\n) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [comment, setComment] = useState('');\n\n  return (\n    <form className=\"NewCommentForm\">\n      <div className=\"form-field\">\n        <input\n          value={name}\n          onChange={({ target }) => setName(target.value)}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n      <div className=\"form-field\">\n        <input\n          value={email}\n          onChange={({ target }) => {\n            setEmail(target.value);\n          }}\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          value={comment}\n          onChange={({ target }) => setComment(target.value)}\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n        onClick={(event) => {\n          event.preventDefault();\n          setDeleteOrAddWait(prev => prev + 1);\n          setWaitForComments(true);\n          setName('');\n          setEmail('');\n          setComment('');\n          addComments(selectedPostId, {\n            name, email, body: comment,\n          });\n        }}\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = NewCommentFormPropTypes;\n","import PropTypes from 'prop-types';\n\nexport const NewCommentFormPropTypes = {\n  selectedPostId: PropTypes.number.isRequired,\n  setDeleteOrAddWait: PropTypes.func.isRequired,\n  setWaitForComments: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Loader } from '../Loader/Loader';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\nimport { getUserPosts, removeComments } from '../../api/posts';\n\nexport const PostDetails = ({ selectedPostId }) => {\n  const [posts, setPosts] = useState({});\n  const [deleteOrAddWait, setDeleteOrAddWait] = useState(0);\n  const [waitForComments, setWaitForComments] = useState(false);\n  const [waitForPost, setWaitForPost] = useState(false);\n  const [comments, setComments] = useState([]);\n  const [showComments, setShowComments] = useState(true);\n\n  useEffect(() => {\n    if (selectedPostId !== 0) {\n      setWaitForPost(true);\n      setWaitForComments(true);\n      getUserPosts(selectedPostId, '/posts/')\n        .then(post => setPosts(post));\n    }\n  }, [selectedPostId]);\n\n  useEffect(() => {\n    (getUserPosts('', '/comments/'))\n      .then((post) => {\n        setComments(post.filter(x => x.postId === selectedPostId));\n      });\n  }, [comments]);\n\n  useEffect(() => {\n    (getUserPosts('', '/comments/'))\n      .then((post) => {\n        setComments(post.filter(x => x.postId === selectedPostId));\n        setWaitForComments(false);\n        setWaitForPost(false);\n      });\n  }, [selectedPostId, deleteOrAddWait]);\n\n  return (\n    <div className=\"PostDetails\">\n      {(selectedPostId !== 0) && (\n        <>\n          <h2>Post details:</h2>\n          {\n            waitForPost\n              ? (<Loader />)\n              : (\n                <>\n                  <section className=\"PostDetails__post\">\n                    <p>{posts.body}</p>\n                  </section>\n                  <section className=\"PostDetails__comments\">\n                    {\n                      !waitForComments && (\n                        <button\n                          onClick={() => setShowComments(prev => !prev)}\n                          type=\"button\"\n                          className=\"button\"\n                        >\n                          {showComments && comments.length ? 'Hide' : 'Show'}\n                          {` ${comments.length} `}\n                          comments\n                        </button>\n                      )}\n                    <ul className=\"PostDetails__list\">\n                      {!waitForComments ? comments.map(comment => (showComments\n                        && (\n                        <li\n                          key={comment.id}\n                          className=\"PostDetails__list-item\"\n                        >\n                          <button\n                            type=\"button\"\n                            className=\"PostDetails__remove-button button\"\n                            onClick={() => {\n                              removeComments(comment.id);\n                              setDeleteOrAddWait(prev => prev + 1);\n                              setWaitForComments(true);\n                            }}\n                          >\n                            X\n                          </button>\n                          <p>{comment.body}</p>\n                        </li>\n                        ))) : <Loader />}\n                    </ul>\n                  </section>\n                  <section>\n                    <div className=\"PostDetails__form-wrapper\">\n                      <NewCommentForm\n                        setDeleteOrAddWait={setDeleteOrAddWait}\n                        setWaitForComments={setWaitForComments}\n                        selectedPostId={selectedPostId}\n                      />\n                    </div>\n                  </section>\n                </>\n              )}\n        </>\n      )}\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  selectedPostId: PropTypes.number.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nconst App = () => {\n  const [selectedPostId, setSelectedPostId] = useState(0);\n  const changeUser = userId => setSelectedPostId(userId);\n  const [choosenUser, setChoosenUser] = useState('0');\n\n  useEffect(() => {\n  }, [choosenUser]);\n\n  const filterListByUser = (user, list) => {\n    if (Number(user) !== 0) {\n      return list.filter(item => item.userId === Number(user));\n    }\n\n    return list;\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n          <select\n            onChange={({ target }) => setChoosenUser(target.value)}\n            className=\"App__user-selector\"\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            filterListByUser={filterListByUser}\n            choosenUser={choosenUser}\n            changeUser={changeUser}\n          />\n        </div>\n        <div className=\"App__content\">\n          <PostDetails selectedPostId={selectedPostId} />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}